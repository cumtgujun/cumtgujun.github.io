<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jun Gu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gujun.info/"/>
  <updated>2018-02-27T08:24:45.402Z</updated>
  <id>http://gujun.info/</id>
  
  <author>
    <name>Jun Gu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mvvm-wpf</title>
    <link href="http://gujun.info/2018/02/27/mvvm-wpf/"/>
    <id>http://gujun.info/2018/02/27/mvvm-wpf/</id>
    <published>2018-02-27T08:22:32.000Z</published>
    <updated>2018-02-27T08:24:45.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据驱动UI概述"><a href="#数据驱动UI概述" class="headerlink" title="数据驱动UI概述"></a>数据驱动UI概述</h1><h2 id="数据驱动UI"><a href="#数据驱动UI" class="headerlink" title="数据驱动UI"></a>数据驱动UI</h2><p>数据驱动的UI，以数据为核心，界面上显示的内容与数据分离，数据变化、UI自动变化，所谓有什么样的数据显示什么样的界面，充分将应用UI的开发与后台逻辑开发、数据开发独立出来。</p><h2 id="高内聚低耦合"><a href="#高内聚低耦合" class="headerlink" title="高内聚低耦合"></a>高内聚低耦合</h2><p>选择一个合适的设计模式开发程序很重要，其可能影响到开发的成本、维护成本、程序性能等，衡量设计模式优劣的其中一个标准是该模式是否高内聚、低耦合，MVVM的核心就是为了实现数据表达的开发与数据计算逻辑开发剥离，实现高内聚、低耦合。</p><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><ul><li><p>View：<br>就是用xaml实现的界面，负责与用户交互，接收用户输入，把数据展现给用户，属于数据表达层。</p></li><li><p>ViewModel：<br>一个C#类，负责收集需要绑定的数据和命令，聚合Model对象，通过View类的DataContext属性绑定到View，同时也可以处理一些UI逻辑。</p></li><li>Model：<br>就是系统中的对象，可包含属性和行为。</li></ul><h1 id="用户场景概述"><a href="#用户场景概述" class="headerlink" title="用户场景概述"></a>用户场景概述</h1><ul><li>设想一下，当你用 Winform 开发完一个界面超级复杂的项目之后，正当心里暗自切喜时，客户突然提出 “这个界面不好看，想用滑动条代替所有的按钮”，此时你会不会有种冲动想请他爷爷的爷爷的爷爷的….爷爷喝个茶？？</li><li>因为你知道这看似很简单的改动，却是项很繁重的体力活，原来按钮的事件处理函数全都用不了了，必须要把所有这些事件处理函数中的代码手动移动到滑动条的处理函数中，前提还必须不依赖事件参数。说不定一编译还各种错误，提示你某某控件不存在。</li><li>如果用 WPF 结合 Mvvm 模式，那就是轻松加愉快了。因为你不需要移动任何代码，要做的只是重新把View和ViewModel绑定一下就可以解决了。</li></ul><h1 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h1><p><img src="https://github.com/DataComputingCenter/learnDemo/blob/master/csharp/mvvmdemo/MvvmDemo/Image/code.png" alt="代码结构示意"></p><h1 id="NotifyPropertyBase类"><a href="#NotifyPropertyBase类" class="headerlink" title="NotifyPropertyBase类"></a>NotifyPropertyBase类</h1><p>目的是绑定数据属性。这个类的作用是实现了INotifyPropertyChanged接口，WPF中类要实现这个接口，其属性成员才具备通知UI的能力<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MvvmDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NotifyPropertyBase</span> : <span class="title">INotifyPropertyChanged</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> INotifyPropertyChanged</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPropertyChanged</span>(<span class="params"><span class="keyword">string</span> propertyName</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (PropertyChanged != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                PropertyChanged(<span class="keyword">this</span>, <span class="keyword">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="SimpleCommand类"><a href="#SimpleCommand类" class="headerlink" title="SimpleCommand类"></a>SimpleCommand类</h1><p>目的是绑定命令属性。这个类的作用是实现了ICommand接口，WPF中实现了ICommand接口的类，才能作为命令绑定到UI。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Input;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MvvmDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimpleCommand</span> : <span class="title">ICommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Predicate&lt;<span class="keyword">object</span>&gt; CanExecuteDelegate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> Action&lt;<span class="keyword">object</span>&gt; ExecuteDelegate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">CanExecute</span>(<span class="params"><span class="keyword">object</span> parameter</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (CanExecuteDelegate != <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> CanExecuteDelegate(parameter);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// if there is no can execute default to true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler CanExecuteChanged</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">add</span> &#123; CommandManager.RequerySuggested += <span class="keyword">value</span>; &#125;</span><br><span class="line">            <span class="keyword">remove</span> &#123; CommandManager.RequerySuggested -= <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Execute</span>(<span class="params"><span class="keyword">object</span> parameter</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (ExecuteDelegate != <span class="literal">null</span>)</span><br><span class="line">                ExecuteDelegate(parameter);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><p>一个属性成员”WPF”,它就是数据属性，的有通知功能，它改变后，会知道通知UI更新。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Album</span> : <span class="title">NotifyPropertyBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _albumId;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _genreId;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> _artistId;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> _title;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">decimal</span> _price;</span><br><span class="line">        <span class="keyword">private</span> Genre _genre;</span><br><span class="line">        <span class="keyword">private</span> Artist _artist;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> AlbumId</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _albumId; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> == _albumId) <span class="keyword">return</span>;</span><br><span class="line">                _albumId = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"AlbumId"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DisplayName(<span class="meta-string">"Genre"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> GenreId</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _genreId; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> == _genreId) <span class="keyword">return</span>;</span><br><span class="line">                _genreId = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Genre"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DisplayName(<span class="meta-string">"Artist"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> ArtistId</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _artistId; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> == _artistId) <span class="keyword">return</span>;</span><br><span class="line">                _artistId = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"ArtistId"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Title</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _title; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> == _title) <span class="keyword">return</span>;</span><br><span class="line">                _title = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Title"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">decimal</span> Price</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _price; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> == _price) <span class="keyword">return</span>;</span><br><span class="line">                _price = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Price"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DisplayName(<span class="meta-string">"Album Art URL"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> AlbumArtUrl &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">virtual</span> Genre Genre</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _genre; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Equals(<span class="keyword">value</span>, _genre)) <span class="keyword">return</span>;</span><br><span class="line">                _genre = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Genre"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">virtual</span> Artist Artist</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _artist; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Equals(<span class="keyword">value</span>, _artist)) <span class="keyword">return</span>;</span><br><span class="line">                _artist = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Artist"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="View"><a href="#View" class="headerlink" title="View"></a>View</h1><p>用户交互界面，接收用户的输入，展示系统的输出。<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">x:Class</span>=<span class="string">"MvvmDemo.MainWindow"</span></span></span></span><br><span class="line"><span class="xml">        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line"><span class="xml">        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line"><span class="xml">        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line"><span class="xml">        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line"><span class="xml">        xmlns:local="clr-namespace:MvvmDemo"</span></span><br><span class="line"><span class="xml">        mc:Ignorable="d"</span></span><br><span class="line"><span class="xml">        Title="MainWindow" Height="350" Width="525"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"Auto"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">"*"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Menu</span> <span class="attr">Grid.Row</span>=<span class="string">"0"</span></span></span></span><br><span class="line"><span class="xml">                  Margin="5"</span></span><br><span class="line"><span class="xml">                  VerticalAlignment="Stretch"</span></span><br><span class="line"><span class="xml">                  HorizontalAlignment="Left"&gt;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Header</span>=<span class="string">"File"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Command</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;Binding CreateAlbum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span></span></span></span><br><span class="line"><span class="xml">                              Header="NewAlbum" /&gt;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">Command</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;Binding DeleteAlbum&#125;</span><span class="xml"><span class="tag"><span class="string">"</span></span></span></span><br><span class="line"><span class="xml">                              Header="DeleteAlbum" /&gt;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">MenuItem</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Menu</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">DataGrid</span> <span class="attr">x:Name</span>=<span class="string">"AzureDataGrid"</span></span></span></span><br><span class="line"><span class="xml">                  Grid.Row="1"</span></span><br><span class="line"><span class="xml">                  RenderOptions.ClearTypeHint="Enabled"</span></span><br><span class="line"><span class="xml">                  TextOptions.TextFormattingMode="Display"</span></span><br><span class="line"><span class="xml">                  Margin="5"</span></span><br><span class="line"><span class="xml">                  ItemsSource="</span><span class="template-variable">&#123;Binding Path=Albums&#125;</span><span class="xml">"</span></span><br><span class="line"><span class="xml">                  AutoGenerateColumns="False"</span></span><br><span class="line"><span class="xml">                  SelectedItem="</span><span class="template-variable">&#123;Binding Path=Album&#125;</span><span class="xml">"&gt;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">DataGrid.Columns</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">"Title"</span></span></span></span><br><span class="line"><span class="xml">                                    Binding="</span><span class="template-variable">&#123;Binding Title&#125;</span><span class="xml">" /&gt;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">"Artist"</span></span></span></span><br><span class="line"><span class="xml">                                    Binding="</span><span class="template-variable">&#123;Binding Artist.Name&#125;</span><span class="xml">" /&gt;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">DataGridTextColumn</span> <span class="attr">Header</span>=<span class="string">"Genre"</span></span></span></span><br><span class="line"><span class="xml">                                    Binding="</span><span class="template-variable">&#123;Binding Genre.Name&#125;</span><span class="xml">" /&gt;</span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">DataGridTemplateColumn</span> <span class="attr">Header</span>=<span class="string">"Price"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">DataTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                            <span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">x:Name</span>=<span class="string">"PriceProgressBar"</span></span></span></span><br><span class="line"><span class="xml">                                                       Value="</span><span class="template-variable">&#123;Binding Price&#125;</span><span class="xml">"</span></span><br><span class="line"><span class="xml">                                                       Minimum="0"</span></span><br><span class="line"><span class="xml">                                                       Maximum="20"</span></span><br><span class="line"><span class="xml">                                                       Background="Transparent"</span></span><br><span class="line"><span class="xml">                                                       VerticalAlignment="Center"</span></span><br><span class="line"><span class="xml">                                                       Height="20"</span></span><br><span class="line"><span class="xml">                                                       Margin="5 2" /&gt;</span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;/<span class="name">DataTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">DataGridTemplateColumn</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">DataGrid.Columns</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">DataGrid</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h1><p>封装业务逻辑，将一个或多个Model进行操作，绑定到一个或者多个View上，View中有一个关键属性DataContext，它的工作是把ViewModel对象赋值到DataContext属性，指定View的数据源就是这个ViewModel<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.ObjectModel;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Input;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MvvmDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MainWindowViewModel</span> : <span class="title">NotifyPropertyBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ICommand _createAlbum;</span><br><span class="line">        <span class="keyword">private</span> ICommand _deleteAlbum;</span><br><span class="line">        <span class="keyword">public</span> Album _album;</span><br><span class="line">        <span class="keyword">public</span> ObservableCollection&lt;Album&gt; Albums</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> SampleData.Albums;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                SampleData.Albums = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Albums"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> Album Album</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _album;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                _album = <span class="keyword">value</span>;</span><br><span class="line">                OnPropertyChanged(<span class="string">"Album"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindowViewModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            SampleData.Seed();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> ICommand CreateAlbum</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>._createAlbum ?? (_createAlbum = <span class="keyword">new</span> SimpleCommand &#123; CanExecuteDelegate = x =&gt; <span class="literal">true</span>, ExecuteDelegate = x =&gt; <span class="keyword">this</span>.CreateAlbumEvent(x) &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> ICommand DeleteAlbum</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>._deleteAlbum ?? (_deleteAlbum = <span class="keyword">new</span> SimpleCommand &#123; CanExecuteDelegate = x =&gt; <span class="literal">true</span>, ExecuteDelegate = x =&gt; <span class="keyword">this</span>.DeleteAlbumEvent(x) &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DeleteAlbumEvent</span>(<span class="params"><span class="keyword">object</span> x</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Albums.Remove(Album);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateAlbumEvent</span>(<span class="params"><span class="keyword">object</span> x</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Album album = <span class="keyword">new</span> Album &#123; Title = <span class="string">"Title"</span> + DateTime.Now.ToString(<span class="string">"yyyyMMddHHmmss"</span>), Genre = SampleData.Genres.First(g =&gt; g.Name == <span class="string">"Rock"</span>), Price = <span class="number">8.99</span>M, Artist = SampleData.Artists.First(a =&gt; a.Name == <span class="string">"Men At Work"</span>), AlbumArtUrl = <span class="string">"/Content/Images/placeholder.gif"</span> &#125;;</span><br><span class="line">            <span class="keyword">this</span>.Albums.Add(album);</span><br><span class="line">            Album = album;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ViewModel对象赋值到DataContext属性，指定View的数据源就是这个ViewModel</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> MainWindowViewModel _viewModel;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line">        _viewModel = <span class="keyword">new</span> MainWindowViewModel();</span><br><span class="line">        <span class="keyword">this</span>.DataContext = _viewModel;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="程序截图"><a href="#程序截图" class="headerlink" title="程序截图"></a>程序截图</h1><p><img src="https://github.com/DataComputingCenter/learnDemo/blob/master/csharp/mvvmdemo/MvvmDemo/Image/UIdemo.png" alt="程序截图示意"></p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="https://github.com/DataComputingCenter/learnDemo/blob/master/csharp/mvvmdemo" target="_blank" rel="noopener">源码</a></p>]]></content>
    
    <summary type="html">
    
      数据驱动的UI，以数据为核心，界面上显示的内容与数据分离，数据变化、UI自动变化，所谓有什么样的数据显示什么样的界面，充分将应用UI的开发与后台逻辑开发、数据开发独立出来。
    
    </summary>
    
      <category term="wpf" scheme="http://gujun.info/categories/wpf/"/>
    
    
      <category term="wpf" scheme="http://gujun.info/tags/wpf/"/>
    
      <category term="mvvm" scheme="http://gujun.info/tags/mvvm/"/>
    
  </entry>
  
  <entry>
    <title>github怎么绑定自己的域名</title>
    <link href="http://gujun.info/2018/02/26/github%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/"/>
    <id>http://gujun.info/2018/02/26/github怎么绑定自己的域名/</id>
    <published>2018-02-26T10:28:20.000Z</published>
    <updated>2018-02-26T10:29:57.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加CNAME文件"><a href="#添加CNAME文件" class="headerlink" title="添加CNAME文件"></a>添加CNAME文件</h1><p>向你的 Github Pages 仓库添加一个CNAME(一定要<em>大写</em>)文件,其中只能包含一个顶级域名，像这样：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">example</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p><p>如果你是用 hexo 框架搭建博客并部署到 Github Pages 上，每次</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>后会把你的博客所在目录下 public 文件夹里的东西都推到 Github Pages 仓库上，并且把 CNAME 文件覆盖掉，解决这个问题可以直接把 CNAME 文件添加到 source 文件夹里，这样每次推的时候就不用担心仓库里的 CNAME 文件被覆盖掉了。</p><h1 id="DNS-配置"><a href="#DNS-配置" class="headerlink" title="DNS 配置"></a>DNS 配置</h1><p>向你的 DNS 配置中添加 3 条记录<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@          A             <span class="number">192.30</span><span class="number">.252</span><span class="number">.153</span></span><br><span class="line">@          A             <span class="number">192.30</span><span class="number">.252</span><span class="number">.154</span></span><br><span class="line">www      CNAME           username.github.io.</span><br></pre></td></tr></table></figure></p><p>用你自己的 Github 用户名替换 username</p><h1 id="等待你的-DNS-配置生效"><a href="#等待你的-DNS-配置生效" class="headerlink" title="等待你的 DNS 配置生效"></a>等待你的 DNS 配置生效</h1><p>对DNS的配置不是立即生效的，过10分钟再去访问你的域名看看有没有配置成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;添加CNAME文件&quot;&gt;&lt;a href=&quot;#添加CNAME文件&quot; class=&quot;headerlink&quot; title=&quot;添加CNAME文件&quot;&gt;&lt;/a&gt;添加CNAME文件&lt;/h1&gt;&lt;p&gt;向你的 Github Pages 仓库添加一个CNAME(一定要&lt;em&gt;大写&lt;/em
      
    
    </summary>
    
      <category term="hexo" scheme="http://gujun.info/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://gujun.info/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 写文章</title>
    <link href="http://gujun.info/2018/02/26/hexo-%E5%86%99%E6%96%87%E7%AB%A0/"/>
    <id>http://gujun.info/2018/02/26/hexo-写文章/</id>
    <published>2018-02-26T09:11:53.000Z</published>
    <updated>2018-02-26T10:22:47.281Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何用hexo和markdown写文章，其中提供了一个客户端工具用于方便可视化写文档<br><a id="more"></a></p><h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><h2 id="新建文档"><a href="#新建文档" class="headerlink" title="新建文档"></a>新建文档</h2><p>执行new命令，生成指定名称的文章至hexo\source_posts\postName.md。<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type"></span>[layout] <span class="string">"postName"</span> <span class="meta">#新建文章</span></span><br></pre></td></tr></table></figure></p><p>其中layout是可选参数，默认值为post。有哪些layout呢，请到scaffolds目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是hexo\scaffolds\post.md<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">title</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">date</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>请注意，大括号与大括号之间我多加了个空格，否则会被转义，不能正常显示。<br>我想添加categories，以免每次手工输入，只需要修改这个文件添加一行，如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">title</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">date</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>postName是md文件的名字，同时也出现在你文章的URL中，postName如果包含空格，必须用”将其包围，postName可以为中文。<br>注意，所有文件：后面都必须有个空格，不然会报错。<br>看一下刚才生成的文件hexo\source_posts\postName.md，内容如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">postName</span> <span class="comment">#文章页面上的显示名称，可以任意修改，不会出现在URL中</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="bullet">-12</span><span class="bullet">-02</span> <span class="number">15</span><span class="string">:30:16</span> <span class="comment">#文章生成时间，一般不改，当然也可以任意修改</span></span><br><span class="line"><span class="attr">categories:</span> <span class="comment">#文章分类目录，可以为空，注意:后面有个空格</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment">#文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>这里开始使用markdown格式输入你的正文。</p><p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。关于markdown语法，可以参考我的文章Markdown简明语法。</p><h2 id="fancybox"><a href="#fancybox" class="headerlink" title="fancybox"></a>fancybox</h2><p>可能有人对这个Reading页面中图片的fancybox效果感兴趣，这个是怎么做的呢。<br>很简单，只需要在你的文章*.md文件的头上添加photos项即可，然后一行行添加你要展示的照片：<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">layout: photo</span><br><span class="line">title: 我的阅历</span><br><span class="line">date: 2085<span class="string">-01</span><span class="string">-16</span> 07:33:44</span><br><span class="line"><span class="keyword">tags:</span> [hexo]</span><br><span class="line">photos:</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos<span class="string">-0</span>.jpg</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos<span class="string">-1</span>.jpg</span><br></pre></td></tr></table></figure></p><p>经过测试，文件头上的layout: photo可以省略。<br>不想每次都手动添加怎么办？同样的，打开您的hexo\scaffolds\photo.md<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">layout</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">title</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;</span> <span class="string">&#123;</span> <span class="string">date</span> <span class="string">&#125;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="attr">photos:</span> </span><br><span class="line"><span class="bullet">-</span> </span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>然后每次可以执行带layout的new命令生成照片文章：<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">photo</span> <span class="string">"photoPostName"</span> <span class="meta">#新建照片文章</span></span><br></pre></td></tr></table></figure></p><h2 id="description"><a href="#description" class="headerlink" title="description"></a>description</h2><p>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文_config.yml的介绍。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">hexo你的博客</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="bullet">-11</span><span class="bullet">-22</span> <span class="number">17</span><span class="string">:11:54</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[hexo]</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">你对本页的描述</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p>hexo默认会处理全部markdown和html文件，如果不想让hexo处理你的文件，可以在文件头中加入layout: false。</p><h2 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h2><p>在需要显示摘要的地方添加如下代码即可：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure></p><p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。</p><p>hexo中所有文件的编码格式均是UTF-8。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何用hexo和markdown写文章，其中提供了一个客户端工具用于方便可视化写文档&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://gujun.info/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://gujun.info/tags/hexo/"/>
    
      <category term="new" scheme="http://gujun.info/tags/new/"/>
    
  </entry>
  
</feed>
